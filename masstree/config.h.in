/* config.h.in.  Generated from configure.ac by autoheader.  */

#ifndef MASSTREE_CONFIG_H_INCLUDED
#define MASSTREE_CONFIG_H_INCLUDED 1

/* Define if building universal (internal helper macro) */
#undef AC_APPLE_UNIVERSAL_BUILD

/* Assumed size of a cache line. */
#undef CACHE_LINE_SIZE

/* Define to enable debugging assertions. */
#undef ENABLE_ASSERTIONS

/* Define to enable invariant assertions. */
#undef ENABLE_INVARIANTS

/* Define to enable precondition assertions. */
#undef ENABLE_PRECONDITIONS

/* Define to 1 if you have the `clock_gettime' function. */
#undef HAVE_CLOCK_GETTIME

/* Define if the C++ compiler understands 'auto'. */
#undef HAVE_CXX_AUTO

/* Define if the C++ compiler understands constexpr. */
#undef HAVE_CXX_CONSTEXPR

/* Define if the C++ compiler understands rvalue references. */
#undef HAVE_CXX_RVALUE_REFERENCES

/* Define if the C++ compiler understands static_assert. */
#undef HAVE_CXX_STATIC_ASSERT

/* Define if the C++ compiler understands template alias. */
#undef HAVE_CXX_TEMPLATE_ALIAS

/* Define to 1 if you have the declaration of `clock_gettime', and to 0 if you
   don't. */
#undef HAVE_DECL_CLOCK_GETTIME

/* Define to 1 if you have the declaration of `getline', and to 0 if you
   don't. */
#undef HAVE_DECL_GETLINE

/* Define to 1 if you have the <execinfo.h> header file. */
#undef HAVE_EXECINFO_H

/* Define if you are using libflow for malloc. */
#undef HAVE_FLOW_MALLOC

/* Define if you are using libhoard for malloc. */
#undef HAVE_HOARD_MALLOC

/* Define if int64_t and long are the same type. */
#undef HAVE_INT64_T_IS_LONG

/* Define if int64_t and long long are the same type. */
#undef HAVE_INT64_T_IS_LONG_LONG

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define if you are using libjemalloc for malloc. */
#undef HAVE_JEMALLOC

/* Define if you have libnuma. */
#undef HAVE_LIBNUMA

/* Define to 1 if the system has the type `long long'. */
#undef HAVE_LONG_LONG

/* Define if MADV_HUGEPAGE is supported. */
#undef HAVE_MADV_HUGEPAGE

/* Define if MAP_HUGETLB is supported. */
#undef HAVE_MAP_HUGETLB

/* Define if memory debugging support is enabled. */
#undef HAVE_MEMDEBUG

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* Define to 1 if you have the <numa.h> header file. */
#undef HAVE_NUMA_H

/* Define if off_t and long are the same type. */
#undef HAVE_OFF_T_IS_LONG

/* Define if off_t and long long are the same type. */
#undef HAVE_OFF_T_IS_LONG_LONG

/* Define if size_t and unsigned are the same type. */
#undef HAVE_SIZE_T_IS_UNSIGNED

/* Define if size_t and unsigned long are the same type. */
#undef HAVE_SIZE_T_IS_UNSIGNED_LONG

/* Define if size_t and unsigned long long are the same type. */
#undef HAVE_SIZE_T_IS_UNSIGNED_LONG_LONG

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define if you have std::hash. */
#undef HAVE_STD_HASH

/* Define if you have the std::is_rvalue_reference template. */
#undef HAVE_STD_IS_RVALUE_REFERENCE

/* Define if you have the std::is_trivially_copyable template. */
#undef HAVE_STD_IS_TRIVIALLY_COPYABLE

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define if superpage support is enabled. */
#undef HAVE_SUPERPAGE

/* Define to 1 if you have the <sys/epoll.h> header file. */
#undef HAVE_SYS_EPOLL_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define if you are using libtcmalloc for malloc. */
#undef HAVE_TCMALLOC

/* Define to 1 if you have the <time.h> header file. */
#undef HAVE_TIME_H

/* Define to 1 if you have the <type_traits> header file. */
#undef HAVE_TYPE_TRAITS

/* Define if unaligned accesses are OK. */
#undef HAVE_UNALIGNED_ACCESS

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define if you have the __builtin_clz builtin. */
#undef HAVE___BUILTIN_CLZ

/* Define if you have the __builtin_clzl builtin. */
#undef HAVE___BUILTIN_CLZL

/* Define if you have the __builtin_clzll builtin. */
#undef HAVE___BUILTIN_CLZLL

/* Define if you have the __builtin_ctz builtin. */
#undef HAVE___BUILTIN_CTZ

/* Define if you have the __builtin_ctzl builtin. */
#undef HAVE___BUILTIN_CTZL

/* Define if you have the __builtin_ctzll builtin. */
#undef HAVE___BUILTIN_CTZLL

/* Define if you have the __has_trivial_copy compiler intrinsic. */
#undef HAVE___HAS_TRIVIAL_COPY

/* Define if you have the __sync_add_and_fetch builtin. */
#undef HAVE___SYNC_ADD_AND_FETCH

/* Define if you have the __sync_add_and_fetch_8 builtin. */
#undef HAVE___SYNC_ADD_AND_FETCH_8

/* Define if you have the __sync_bool_compare_and_swap builtin. */
#undef HAVE___SYNC_BOOL_COMPARE_AND_SWAP

/* Define if you have the __sync_bool_compare_and_swap_8 builtin. */
#undef HAVE___SYNC_BOOL_COMPARE_AND_SWAP_8

/* Define if you have the __sync_fetch_and_add builtin. */
#undef HAVE___SYNC_FETCH_AND_ADD

/* Define if you have the __sync_fetch_and_add_8 builtin. */
#undef HAVE___SYNC_FETCH_AND_ADD_8

/* Define if you have the __sync_fetch_and_or builtin. */
#undef HAVE___SYNC_FETCH_AND_OR

/* Define if you have the __sync_fetch_and_or_8 builtin. */
#undef HAVE___SYNC_FETCH_AND_OR_8

/* Define if you have the __sync_lock_release_set builtin. */
#undef HAVE___SYNC_LOCK_RELEASE_SET

/* Define if you have the __sync_lock_test_and_set builtin. */
#undef HAVE___SYNC_LOCK_TEST_AND_SET

/* Define if you have the __sync_lock_test_and_set_val builtin. */
#undef HAVE___SYNC_LOCK_TEST_AND_SET_VAL

/* Define if you have the __sync_or_and_fetch builtin. */
#undef HAVE___SYNC_OR_AND_FETCH

/* Define if you have the __sync_or_and_fetch_8 builtin. */
#undef HAVE___SYNC_OR_AND_FETCH_8

/* Define if you have the __sync_synchronize builtin. */
#undef HAVE___SYNC_SYNCHRONIZE

/* Define if you have the __sync_val_compare_and_swap builtin. */
#undef HAVE___SYNC_VAL_COMPARE_AND_SWAP

/* Define if you have the __sync_val_compare_and_swap_8 builtin. */
#undef HAVE___SYNC_VAL_COMPARE_AND_SWAP_8

/* Maximum key length */
#undef MASSTREE_MAXKEYLEN

/* Define if the default row type is value_timed_array. */
#undef MASSTREE_ROW_TYPE_ARRAY

/* Define if the default row type is value_timed_array_ver. */
#undef MASSTREE_ROW_TYPE_ARRAY_VER

/* Define if the default row type is value_timed_bag. */
#undef MASSTREE_ROW_TYPE_BAG

/* Define if the default row type is value_timed_str. */
#undef MASSTREE_ROW_TYPE_STR

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* The size of `int', as computed by sizeof. */
#undef SIZEOF_INT

/* The size of `long', as computed by sizeof. */
#undef SIZEOF_LONG

/* The size of `long long', as computed by sizeof. */
#undef SIZEOF_LONG_LONG

/* The size of `short', as computed by sizeof. */
#undef SIZEOF_SHORT

/* The size of `void *', as computed by sizeof. */
#undef SIZEOF_VOID_P

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
   significant byte first (like Motorola and SPARC, unlike Intel). */
#if defined AC_APPLE_UNIVERSAL_BUILD
# if defined __BIG_ENDIAN__
#  define WORDS_BIGENDIAN 1
# endif
#else
# ifndef WORDS_BIGENDIAN
#  undef WORDS_BIGENDIAN
# endif
#endif

/* Define if WORDS_BIGENDIAN has been set. */
#undef WORDS_BIGENDIAN_SET

#if !FORCE_ENABLE_ASSERTIONS && !ENABLE_ASSERTIONS
# define NDEBUG 1
#endif

/** @brief Assert macro that always runs. */
extern void fail_always_assert(const char* file, int line, const char* assertion, const char* message = 0) __attribute__((noreturn));
#define always_assert(x, ...) do { if (!(x)) fail_always_assert(__FILE__, __LINE__, #x, ## __VA_ARGS__); } while (0)
#define mandatory_assert always_assert

/** @brief Assert macro for invariants.

    masstree_invariant(x) is executed if --enable-invariants or
    --enable-assertions. */
extern void fail_masstree_invariant(const char* file, int line, const char* assertion, const char* message = 0) __attribute__((noreturn));
#if FORCE_ENABLE_ASSERTIONS || (!defined(ENABLE_INVARIANTS) && ENABLE_ASSERTIONS) || ENABLE_INVARIANTS
#define masstree_invariant(x, ...) do { if (!(x)) fail_masstree_invariant(__FILE__, __LINE__, #x, ## __VA_ARGS__); } while (0)
#else
#define masstree_invariant(x, ...) do { } while (0)
#endif

/** @brief Assert macro for preconditions.

    masstree_precondition(x) is executed if --enable-preconditions or
    --enable-assertions. */
extern void fail_masstree_precondition(const char* file, int line, const char* assertion, const char* message = 0) __attribute__((noreturn));
#if FORCE_ENABLE_ASSERTIONS || (!defined(ENABLE_PRECONDITIONS) && ENABLE_ASSERTIONS) || ENABLE_PRECONDITIONS
#define masstree_precondition(x, ...) do { if (!(x)) fail_masstree_precondition(__FILE__, __LINE__, #x, ## __VA_ARGS__); } while (0)
#else
#define masstree_precondition(x, ...) do { } while (0)
#endif

#ifndef invariant
#define invariant masstree_invariant
#endif
#ifndef precondition
#define precondition masstree_precondition
#endif

#endif
