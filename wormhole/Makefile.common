HDR = $(addsuffix .h,$(MODULES))
SRC = $(addsuffix .c,$(MODULES) $(SOURCES))
DEP = Makefile Makefile.common Makefile.local $(HDR) $(SRC) $(EXTERNDEP) $(EXTERNSRC)
BIN = $(addsuffix .out,$(TARGETS))
DIS = $(addsuffix .dis,$(TARGETS))
CCC ?= gcc

NBI += -fno-builtin-memcpy
NBI += -fno-builtin-memmove
NBI += -fno-builtin-memcmp
NBI += -fno-builtin-malloc
NBI += -fno-builtin-calloc

# Note for clang:
#   EXTRA="-Rpass=loop-vectorize"
#   EXTRA="-Rpass-analysis=loop-vectorize"

ifeq ($O,3g) # make O=3g
OPT ?= -g3 -O3 -flto -fno-inline $(NBI)
else ifeq ($O,3p) # make O=3p
OPT ?= -DNDEBUG -g3 -O3 -flto -fno-inline $(NBI)
else ifeq ($O,2g) # make O=2g
OPT ?= -g3 -O2 -flto -fno-inline $(NBI)
else ifeq ($O,r) # make O=r
OPT ?= -DNDEBUG -O3 -flto $(NBI)
else ifeq ($O,rg) # make O=rg
OPT ?= -g3 -DNDEBUG -O3 -flto $(NBI)
else ifeq ($O,c) # make O=c
OPT ?= -g3 -O0 --coverage -fno-inline $(NBI)
else ifeq ($O,0g) # make O=0g
OPT ?= -g3 -O0
else # default: release build. Same to O=r
OPT ?= -DNDEBUG -O3 -flto $(NBI)
endif

# minimal arch requirement: -march=nehalem
FLG += $(OPT) -rdynamic -march=native -mtune=native -Wall -Wextra -std=gnu11 -pthread

.PHONY : bin dis clean cleanall check

bin : $(BIN)
dis : $(DIS) bin
.DEFAULT_GOAL = libs

.SECONDEXPANSION:
%.out : %.c $(DEP) $$(addsuffix .c,$$(SRC-$$@) $$(MOD-$$@)) $$(addsuffix .h,$$(MOD-$$@))
	$(eval ALLSRC := $(SRC) $(addsuffix .c,$(SRC-$@) $(MOD-$@)))
	$(eval ALLFLG := $(FLG) $(FLG-$@))
	$(eval ALLLIB := $(addprefix -l,$(LIB) $(LIB-$@)))
	$(CCC) $(EXTRA) $(ALLFLG) -o $@ $< $(ALLSRC) $(ALLLIB)

%.dis : %.out
	objdump -SlwTC $< > $@

%.o : %.c
	$(eval STEM := $(patsubst %.o,%,$@))
	$(CCC) $(EXTRA) $(FLG) $(FLG-$(STEM)) -o $@ -c $<

wh.o : wh.c
	$(eval ALLFLG := $(FLG) $(FLG-$@))
	$(eval ALLLIB := $(addprefix -l,$(LIB) $(LIB-$@)))
	gcc -O -c $(FLG) $(ALLFLG) wh.c wh.h $(ALLLIB)

libwh.a : wh.o
	gcc-ar rcs libwh.a wh.o

libs: libwh.a


clean :
	rm -rf *.out *.dis *.o *.gcda *.gcno *.gcov *.a

cleanall :
	rm -rf *.out *.dis *.o $(EXTERNDEP) $(EXTERNSRC) *.a

GCCINSTALL = "/usr/lib/gcc/$$(gcc -dumpmachine)/$$(gcc -dumpversion)"
check :
	cppcheck -I /usr/include -I /usr/local/include \
    -I $(GCCINSTALL)/include -I $(GCCINSTALL)/include-fixed \
    -q -D__x86_64__=1 -U__cplusplus --std=c11 --language=c --platform=unix64 --enable=all .
