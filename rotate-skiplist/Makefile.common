################
# Local settings
################

ROOT 		?= ../..

# STM
ESTMDIR		?= $(ROOT)/src/utils/estm-0.3.0
TINYSTMDIR 	?= SET_TINYSTM_PATH
TINY098DIR 	?= SET_TINY098_PATH
WLPDSTMDIR	?= SET_SWISSTM_PATH
TL2DIR		?= SET_TL2_PATH
XBDIR 		?= SET_XBOOST_PATH

# Compiler
SOLARIS_CC 	?= gcc
CC		= gcc

# Version
ifeq ($(VERSION),DEBUG)
     CFLAGS     += -g -DDEBUG -O0
else
     CFLAGS     += -O3 -DNDEBUG
endif

# Parallelism
JLEVEL		= 4

BINDIR		?= $(ROOT)/bin
BUILDIR		?= $(ROOT)/build

$(shell [ -d "$(BUILDIR)" ] || mkdir -p $(BUILDIR))
$(shell [ -d "$(BINDIR)" ] || mkdir -p $(BINDIR))

# Path to LIBATOMIC_OPS (or to gcc-specific libatomic_ops)
ifdef LIBAO_HOME
  LIBAO_INC = $(LIBAO_HOME)/include
else
  LIBAO_INC = $(ROOT)/src/atomic_ops
endif

ifndef STM
  LOCK          ?= MUTEX
endif
ifeq ($(STM),ESTM)
  CFLAGS	+= -DSTM -DESTM
  STMDIR        = $(ESTMDIR)
  LIBDIR	= $(STMDIR)/lib
  SRCDIR 	= $(STMDIR)/src
  INCDIR 	= $(STMDIR)/include
  TM		= stm
  ELASTICITY 	?= 1
endif
ifeq ($(STM),TINY100)
  CFLAGS	+= -DSTM -DTINY100
  STMDIR	= $(TINY100DIR)
  LIBDIR	= $(STMDIR)/lib
  SRCDIR 	= $(STMDIR)/src
  INCDIR 	= $(STMDIR)/include
  TM		= stm
endif
ifeq ($(STM),TINY10B)
  CFLAGS	+= -DSTM -DTINY10B
  STMDIR	= $(TINY10BDIR)
  LIBDIR	= $(STMDIR)/lib
  SRCDIR 	= $(STMDIR)/src
  INCDIR 	= $(STMDIR)/include
  TM		= stm
endif
ifeq ($(STM),TINY099)
  CFLAGS	+= -DSTM -DTINY099
  STMDIR	= $(TINYSTMDIR)
  LIBDIR	= $(STMDIR)/lib
  SRCDIR 	= $(STMDIR)/src
  INCDIR 	= $(STMDIR)/include
  TM		= stm
endif
ifeq ($(STM),TINY098)
  CFLAGS	+= -DSTM -DTINY098
  STMDIR	= $(TINY098DIR)
  LIBDIR 	= $(STMDIR)/lib
  SRCDIR 	= $(STMDIR)/src
  INCDIR 	= $(STMDIR)/include
  TM		= stm
endif
ifeq ($(STM),TL2)
  CFLAGS	+= -DSTM -DTL2
  STMDIR        = $(TL2DIR)
  LIBDIR 	= $(STMDIR)
  SRCDIR 	= $(STMDIR)
  INCDIR 	= $(STMDIR)
  TM		= tl2
endif
ifeq ($(STM),XB)
  CFLAGS	+= -DSTM -DTL2 -DXBOOST -DLIST_NO_DUPLICATES -DMAP_USE_RBTREE
  STMDIR        = $(XBDIR)
  LIBDIR 	= $(STMDIR)
  SRCDIR 	= $(STMDIR)
  INCDIR 	= $(STMDIR)
  TM		= tl2_xb
endif
ifeq ($(STM),AXB)
  CFLAGS	+= -DSTM -DTL2 -DXBOOST_AGG -DLIST_NO_DUPLICATES -DMAP_USE_RBTREE
  STMDIR        = $(XBDIR)
  LIBDIR 	= $(STMDIR)
  SRCDIR 	= $(STMDIR)
  INCDIR 	= $(STMDIR)
  TM		= tl2_axb
endif
ifeq ($(STM),AXBS)
  CFLAGS	+= -DSTM -DTL2 -DXBOOST_AGG_STEAL -DLIST_NO_DUPLICATES -DMAP_USE_RBTREE
  STMDIR        = $(XBDIR)
  LIBDIR 	= $(STMDIR)
  SRCDIR 	= $(STMDIR)
  INCDIR 	= $(STMDIR)
  TM		= tl2_axbs
endif
ifeq ($(STM),WLPDSTM)
  CFLAGS	+= -DSTM -DWLPDSTM
  STMDIR	= $(WLPDSTMDIR)
  LIBDIR	= $(STMDIR)/lib
  SRCDIR 	= $(STMDIR)/src
  INCDIR 	= $(STMDIR)/include
  TM		= wlpdstm
endif
ifeq ($(STM),SEQUENTIAL)
  CFLAGS	+= -DSEQUENTIAL
endif
ifeq ($(STM),LOCKFREE)
  CFLAGS	+= -DLOCKFREE
endif

TMLIB 		= $(LIBDIR)/lib$(TM).a

#############################
# Platform dependent settings
#############################
#
# GCC thread-local storage requires "significant 
# support from the linker (ld), dynamic linker
# (ld.so), and system libraries (libc.so and libpthread.so), so it is
# not available everywhere." source: GCC-doc.
#
# pthread_spinlock is replaced by pthread_mutex 
# on MacOS X, as it might not be supported. 
# Comment LOCK = MUTEX below to enable.

ifndef OS_NAME
    OS_NAME = $(shell uname -s)
endif

ifeq ($(OS_NAME), Darwin)
    OS = MacOS
    DEFINES += -UTLS
    LOCK = MUTEX
endif

ifeq ($(OS_NAME), Linux)
    OS = Linux
    DEFINES += -DTLS
endif

ifeq ($(OS_NAME), SunOS)
    OS = Solaris
    CC = $(SOLARIS_CC)
    DEFINES += -DTLS
endif

ifndef STM
  ifeq ($(LOCK),MUTEX)
    CFLAGS += -DMUTEX
  endif
endif

#################################
# Architecture dependent settings
#################################

ifndef ARCH
    ARCH_NAME = $(shell uname -m)
endif

ifeq ($(ARCH_NAME), i386)
    ARCH = x86
    CFLAGS += -m32
    LDFLAGS += -m32
endif

ifeq ($(ARCH_NAME), i686)
    ARCH = x86
    CFLAGS += -m32
    LDFLAGS += -m32
endif

ifeq ($(ARCH_NAME), x86_64)
    ARCH = x86_64
    CFLAGS += -m64
    LDFLAGS += -m64
endif

ifeq ($(ARCH_NAME), sun4v)
    ARCH = sparc64
    CFLAGS += -DSPARC=1 -DINLINED=1 -mt -fast -m64
    LDFLAGS += -lrt -m64
endif

#################
# Global settings
#################

CFLAGS += -D_REENTRANT
#CFLAGS += -Wall
CFLAGS += -fno-strict-aliasing
CFLAGS += -I$(LIBAO_INC) -I$(ROOT)/include

#LDFLAGS += -L$(LIBAO)/lib -latomic_ops 
LDFLAGS += -lpthread

ifdef STM
  ifneq ($(STM), SEQUENTIAL)
  	ifneq ($(STM), LOCKFREE) 
  	  CFLAGS += -I$(INCDIR)
   	  LDFLAGS += -L$(LIBDIR) -l$(TM)
	endif
  endif
endif

#############
# Memory Mgmt
#############

ifeq ($(MALLOC), TC)
  LDFLAGS += -ltcmalloc
  CFLAGS += -fno-builtin-malloc -fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free
endif

